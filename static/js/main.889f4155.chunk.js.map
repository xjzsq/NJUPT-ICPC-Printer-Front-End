{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["TextArea","Input","Step","Steps","Header","Layout","Content","Footer","axios","require","default","App","useState","name","setName","React","current","setCurrent","selectedKeys","mode","theme","Item","icon","PrinterOutlined","src","height","href","target","rel","LinkOutlined","span","offset","title","status","EditOutlined","FileZipOutlined","CheckCircleOutlined","layout","initialValues","remember","onFinish","values","console","log","onFinishFailed","errorInfo","label","rules","required","message","tailLayout","valuePropName","type","htmlType","code","post","no","then","response","catch","error","textLayout","rows","style","margin","subTitle","textAlign","labelCol","wrapperCol","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.889f4155.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Result, Layout, Steps, Menu, PageHeader, Row, Col, Form, Input, Button, Checkbox, Divider } from 'antd';\nimport { PrinterOutlined, EditOutlined, FileZipOutlined, CheckCircleOutlined, LinkOutlined } from '@ant-design/icons';\nimport 'antd/dist/antd.css';\nimport './index.css';\nconst { TextArea } = Input;\nconst { Step } = Steps;\nconst { Header, Content, Footer } = Layout;\nconst axios = require('axios').default;\n\n\nfunction App() {\n  const [name, setName] = useState(\"输入队伍编号...\");\n  const [current, setCurrent] = React.useState(0);\n  const onFinish = (values) => {\n    console.log('Success:', values);\n    setName(values.name);\n    setCurrent(current + 1);\n    console.log(name);\n  };\n  const onFinishFailed = (errorInfo) => {\n    console.log('Failed:', errorInfo);\n  };\n  const onPasteFinishFailed = (errorInfo) => {\n    console.log('Failed:', errorInfo);\n  };\n  const onPasteFinish = (values) => {\n    console.log('Success:', values);\n    console.log(values.code);\n    axios.post('/api/', {\n      no: name,\n      code: values.code\n    })\n      .then(function (response) {\n        console.log(response);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    setCurrent(current + 1);\n  }\n  return (\n    <Layout>\n      <Header>\n        <Menu selectedKeys={[\"home\"]} mode=\"horizontal\" theme=\"light\" >\n          <Menu.Item key=\"home\" icon={<PrinterOutlined />}>\n            代码打印\n          </Menu.Item>\n          <Menu.Item key=\"noj\" icon={<img src='https://acm.njupt.edu.cn/favicon.png' height='17'/>}>\n            <a href=\"https://acm.njupt.edu.cn/\" target=\"_blank\" rel=\"noopener noreferrer\">\n              NOJ\n            </a>\n          </Menu.Item>\n          <Menu.Item key=\"xjzsq\" icon={<LinkOutlined />}>\n            <a href=\"https://xjzsq.cn\" target=\"_blank\" rel=\"noopener noreferrer\">\n              青い記憶\n            </a>\n          </Menu.Item>\n        </Menu>\n      </Header>\n      <Row>\n        <Col span={18} offset={3}>\n          <Content>\n            <PageHeader title=\"南邮ACM校队真题模拟训练赛代码打印\">\n              <Steps>\n                <Step status={current > 0 ? \"finish\" : \"process\"} title=\"填写队伍编号\" icon={<EditOutlined />} />\n                <Step status={current > 1 ? \"finish\" : current < 1 ? \"wait\" : \"process\"} title=\"粘贴打印代码\" icon={<FileZipOutlined />} />\n                <Step status={current > 2 ? \"finish\" : current < 2 ? \"wait\" : \"process\"} title=\"完成~\" icon={<CheckCircleOutlined />} />\n              </Steps>\n            </PageHeader>\n            <Divider />\n            {current == 0 && (\n              <Form\n                {...layout}\n                name=\"basic\"\n                initialValues={{\n                  remember: true,\n                }}\n                onFinish={onFinish}\n                onFinishFailed={onFinishFailed}\n              >\n                <Form.Item\n                  label=\"队伍编号\"\n                  name=\"name\"\n                  rules={[\n                    {\n                      required: true,\n                      message: '输入队伍编号...',\n                    },\n                  ]}\n                >\n                  <Input />\n                </Form.Item>\n                <Form.Item {...tailLayout} name=\"remember\" valuePropName=\"checked\">\n                  <Checkbox>记住信息</Checkbox>\n                </Form.Item>\n\n                <Form.Item {...tailLayout}>\n                  <Button type=\"primary\" htmlType=\"submit\" >\n                    下一步\n                  </Button>\n                </Form.Item>\n              </Form>\n            )}\n            {current == 1 && (\n              <Form\n                {...layout}\n                name=\"basic\"\n                onFinish={onPasteFinish}\n                onFinishFailed={onPasteFinishFailed}\n              >\n                <Form.Item {...textLayout}\n                  name=\"code\"\n                  rules={[\n                    {\n                      required: true,\n                      message: '输入代码...',\n                    },\n                  ]}>\n                  <TextArea rows={4} />\n                </Form.Item>\n                <Form.Item {...textLayout} style={{ margin: 'auto' }}>\n                  <Button type=\"primary\" htmlType=\"submit\"  >\n                    打印\n                  </Button>\n                </Form.Item>\n              </Form>\n\n            )}\n            {current == 2 && (\n              <Result\n                status=\"success\"\n                title=\"提交打印成功！\"\n                subTitle=\"请耐心等待志愿者将代码送达。如需重新提交请刷新页面重新打印\"\n              // extra={[\n              //   <Button type=\"primary\" key=\"console\">\n              //     Go Console\n              //   </Button>,\n              // ]}\n              />\n            )}\n          </Content>\n        </Col>\n      </Row>\n      <Footer style={{ textAlign: 'center' }}>\n        代码打印系统  @2021 Crafted with ❤ by <a href=\"http://d1.fan\" target=\"_blank\">xjzsq </a>,\n        Powered by < a href=\"https://reactjs.org/\" > React </a >\n      </Footer >\n    </Layout >\n  );\n}\n\nexport default App;\n\nconst layout = {\n  labelCol: {\n    span: 8\n  },\n  wrapperCol: {\n    span: 8,\n  },\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16,\n  },\n};\nconst textLayout = {\n  wrapperCol:\n  {\n    offset: 3,\n    span: 18\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}